{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///socketIndoorLocationProvider.min.js","webpack:///webpack/bootstrap 33035d596f2a4d910da1","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/debug/src/browser.js","webpack:///./node_modules/component-emitter/index.js","webpack:///./node_modules/engine.io-parser/lib/browser.js","webpack:///./node_modules/parseqs/index.js","webpack:///./node_modules/component-inherit/index.js","webpack:///./node_modules/socket.io-parser/index.js","webpack:///./node_modules/engine.io-client/lib/xmlhttprequest.js","webpack:///./node_modules/engine.io-client/lib/transport.js","webpack:///./node_modules/parseuri/index.js","webpack:///./node_modules/has-binary2/index.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/socket.io-parser/is-buffer.js","webpack:///./node_modules/socket.io-client/lib/manager.js","webpack:///./node_modules/engine.io-client/lib/transports/index.js","webpack:///./node_modules/engine.io-client/lib/transports/polling.js","webpack:///./node_modules/yeast/index.js","webpack:///./node_modules/indexof/index.js","webpack:///./node_modules/socket.io-client/lib/socket.js","webpack:///./node_modules/socket.io-client/lib/on.js","webpack:///./node_modules/component-bind/index.js","webpack:///./src/index.ts","webpack:///./node_modules/socket.io-client/lib/index.js","webpack:///./node_modules/socket.io-client/lib/url.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/debug/src/debug.js","webpack:///./node_modules/ms/index.js","webpack:///./node_modules/socket.io-parser/binary.js","webpack:///./node_modules/engine.io-client/lib/index.js","webpack:///./node_modules/engine.io-client/lib/socket.js","webpack:///./node_modules/has-cors/index.js","webpack:///./node_modules/engine.io-client/lib/transports/polling-xhr.js","webpack:///./node_modules/engine.io-parser/lib/keys.js","webpack:///./node_modules/arraybuffer.slice/index.js","webpack:///./node_modules/after/index.js","webpack:///./node_modules/engine.io-parser/lib/utf8.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","webpack:///./node_modules/blob/index.js","webpack:///./node_modules/engine.io-client/lib/transports/polling-jsonp.js","webpack:///./node_modules/engine.io-client/lib/transports/websocket.js","webpack:///./node_modules/to-array/index.js","webpack:///./node_modules/backo2/index.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","g","Function","eval","e","window","process","useColors","type","document","documentElement","style","WebkitAppearance","console","firebug","exception","table","navigator","userAgent","toLowerCase","match","parseInt","RegExp","$1","formatArgs","args","namespace","humanize","diff","color","splice","index","lastC","replace","log","apply","arguments","save","namespaces","storage","removeItem","debug","load","r","env","DEBUG","chrome","local","localStorage","colors","formatters","j","v","JSON","stringify","err","message","enable","Emitter","obj","mixin","key","on","addEventListener","event","fn","_callbacks","push","once","off","removeListener","removeAllListeners","removeEventListener","length","callbacks","cb","emit","slice","len","listeners","hasListeners","global","encodeBase64Object","packet","callback","packets","data","encodeArrayBuffer","supportsBinary","encodeBase64Packet","contentArray","Uint8Array","resultBuffer","byteLength","buffer","encodeBlobAsArrayBuffer","fr","FileReader","onload","result","encodePacket","readAsArrayBuffer","encodeBlob","dontSendBlobs","Blob","tryDecode","utf8","decode","strict","map","ary","each","done","Array","next","after","el","error","msg","base64encoder","keys","hasBinary","sliceBuffer","ArrayBuffer","isAndroid","test","isPhantomJS","protocol","open","close","ping","pong","upgrade","noop","packetslist","utf8encode","undefined","base64","encoded","encode","String","b64","split","readAsDataURL","b64data","fromCharCode","typed","basic","btoa","decodePacket","binaryType","utf8decode","charAt","decodeBase64Packet","substr","Number","substring","asArray","rest","encodePayload","setLengthHeader","encodeOne","doneCallback","isBinary","encodePayloadAsBlob","encodePayloadAsArrayBuffer","results","join","decodePayload","decodePayloadAsBinary","chr","encodedPackets","totalLength","reduce","acc","toString","resultArray","bufferIndex","forEach","isString","ab","view","charCodeAt","lenStr","binaryIdentifier","size","lengthAry","blob","bufferTail","buffers","tailArray","msgLength","total","str","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","a","b","constructor","Encoder","encodeAsString","BINARY_EVENT","BINARY_ACK","attachments","nsp","id","encodeAsBinary","writeEncoding","bloblessData","deconstruction","binary","deconstructPacket","pack","unshift","removeBlobs","Decoder","reconstructor","decodeString","types","buf","Error","tryParse","parse","BinaryReconstructor","reconPack","ERROR","hasBin","isBuf","CONNECT","DISCONNECT","EVENT","ACK","add","takeBinaryData","destroy","finishedReconstruction","binData","reconstructPacket","hasCORS","opts","xdomain","xscheme","enablesXDR","XMLHttpRequest","XDomainRequest","concat","Transport","path","hostname","port","secure","query","timestampParam","timestampRequests","readyState","agent","socket","pfx","passphrase","cert","ca","ciphers","rejectUnauthorized","forceNode","extraHeaders","localAddress","parser","onError","desc","description","doOpen","doClose","onClose","send","write","onOpen","writable","onData","onPacket","re","parts","src","indexOf","exec","uri","source","host","authority","ipv6uri","isArray","Buffer","isBuffer","withNativeBlob","withNativeFile","File","toJSON","arr","Manager","nsps","subs","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","Backoff","min","max","jitter","timeout","connecting","lastPing","encoding","packetBuffer","_parser","encoder","decoder","autoConnect","eio","Socket","bind","has","emitAll","updateSocketIds","generateId","engine","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","maybeReconnectOnOpen","reconnecting","attempts","reconnect","connect","self","skipReconnect","openSub","onopen","errorSub","cleanup","timer","setTimeout","clearTimeout","onping","Date","onpong","ondata","ondecoded","onerror","onConnecting","options","processPacketQueue","shift","subsLength","disconnect","reset","onclose","reason","delay","duration","onreconnect","attempt","polling","xd","xs","jsonp","location","isSSL","forceJSONP","XHR","JSONP","websocket","Polling","forceBase64","hasXHR2","parseqs","inherit","yeast","responseType","poll","pause","onPause","doPoll","callbackfn","doWrite","schema","sid","num","alphabet","Math","floor","decoded","now","prev","seed","io","json","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","toArray","events","connect_error","connect_timeout","reconnect_attempt","reconnect_failed","reconnect_error","subEvents","ev","compress","flags","pop","onpacket","onconnect","onevent","onack","ondisconnect","ack","sent","emitBuffered","SocketIndoorLocationProvider","socketUrl","userId","connection","userIndoorLocation","_i","_a","start","stop","addListener","isStarted","supportsFloor","getName","lookup","parsed","url","sameNamespace","cache","newConnection","forceNew","multiplex","managers","loc","parseuri","ipv6","href","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","run","Item","array","nextTick","title","browser","argv","version","versions","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","selectColor","hash","abs","createDebug","enabled","curr","ms","prevTime","coerce","format","formatter","val","init","names","skips","disable","stack","parseFloat","y","h","fmtShort","round","fmtLong","plural","ceil","isNaN","long","_deconstructPacket","placeholder","_placeholder","newData","_reconstructPacket","packetData","_removeBlobs","curKey","containingObject","pendingBlobs","fileReader","transports","transportOptions","writeBuffer","prevBufferLen","policyPort","rememberUpgrade","onlyBinaryUpgrades","perMessageDeflate","threshold","freeGlobal","upgrades","pingInterval","pingTimeout","pingIntervalTimer","pingTimeoutTimer","clone","priorWebsocketSuccess","createTransport","EIO","transport","requestTimeout","protocols","setTransport","onDrain","probe","onTransportOpen","upgradeLosesBinary","failed","upgrading","flush","freezeTransport","onTransportClose","onupgrade","to","onHandshake","setPing","code","filterUpgrades","onHeartbeat","sendPacket","cleanupAndClose","waitForUpgrade","filteredUpgrades","empty","Request","method","async","create","unloadHandler","requests","abort","request","req","sendXhr","pollXhr","xhr","setDisableHeaderCheck","setRequestHeader","withCredentials","hasXDR","onLoad","responseText","onreadystatechange","contentType","getResponseHeader","status","requestsCount","onSuccess","fromError","response","attachEvent","arraybuffer","end","bytes","abv","ii","count","err_cb","proxy","bail","__WEBPACK_AMD_DEFINE_RESULT__","ucs2decode","string","value","extra","output","counter","ucs2encode","stringFromCharCode","checkScalarValue","codePoint","toUpperCase","createByte","encodeCodePoint","symbol","codePoints","byteString","readContinuationByte","byteIndex","byteCount","continuationByte","byteArray","decodeSymbol","byte1","byte2","byte3","byte4","tmp","freeExports","webpackPolyfill","deprecate","paths","children","chars","encoded1","encoded2","encoded3","encoded4","bufferLength","mapArrayBufferViews","chunk","copy","set","byteOffset","BlobBuilderConstructor","bb","BlobBuilder","append","getBlob","BlobConstructor","WebKitBlobBuilder","MSBlobBuilder","MozBlobBuilder","blobSupported","blobSupportsArrayBufferView","blobBuilderSupported","JSONPPolling","___eio","script","rNewline","rEscapedNewline","parentNode","removeChild","form","iframe","createElement","insertAt","getElementsByTagName","insertBefore","head","body","appendChild","complete","initIframe","html","iframeId","area","className","position","top","left","target","setAttribute","action","submit","WS","usingBrowserWebSocket","BrowserWebSocket","WebSocket","NodeWebSocket","MozWebSocket","check","headers","ws","supports","addEventListeners","onmessage","list","factor","pow","rand","random","deviation"],"mappings":"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","file":"socketIndoorLocationProvider.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SocketIndoorLocationProvider\"] = factory();\n\telse\n\t\troot[\"SocketIndoorLocationProvider\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SocketIndoorLocationProvider\"] = factory();\n\telse\n\t\troot[\"SocketIndoorLocationProvider\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 21);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nvar g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process) {/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = __webpack_require__(25);\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(24)))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (true) {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * Module dependencies.\n */\n\nvar keys = __webpack_require__(32);\nvar hasBinary = __webpack_require__(10);\nvar sliceBuffer = __webpack_require__(33);\nvar after = __webpack_require__(34);\nvar utf8 = __webpack_require__(35);\n\nvar base64encoder;\nif (global && global.ArrayBuffer) {\n  base64encoder = __webpack_require__(37);\n}\n\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\nvar dontSendBlobs = isAndroid || isPhantomJS;\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = __webpack_require__(38);\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if (typeof utf8encode === 'function') {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = (packet.data === undefined)\n    ? undefined\n    : packet.data.buffer || packet.data;\n\n  if (global.ArrayBuffer && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (Blob && data instanceof global.Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  }\n\n  // might be an object with { base64: true, data: dataAsBase64String }\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n\n/**\n * Encode packet helpers for binary types\n */\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n  resultBuffer[0] = packets[packet.type];\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i+1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n  fr.onload = function() {\n    packet.data = fr.result;\n    exports.encodePacket(packet, supportsBinary, true, callback);\n  };\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n\n  return callback(blob);\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n  if (Blob && packet.data instanceof global.Blob) {\n    var fr = new FileReader();\n    fr.onload = function() {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n  message += global.btoa(b64data);\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  }\n  // String data\n  if (typeof data === 'string') {\n    if (data.charAt(0) === 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      data = tryDecode(data);\n      if (data === false) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n  return { type: packetslist[type], data: rest };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data, { strict: false });\n  } catch (e) {\n    return false;\n  }\n  return data;\n}\n\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  if (!base64encoder) {\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data !== 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data === '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = '', n, msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (chr !== ':') {\n      length += chr;\n      continue;\n    }\n\n    if (length === '' || (length != (n = Number(length)))) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    msg = data.substr(i + 1, n);\n\n    if (length != msg.length) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    if (msg.length) {\n      packet = exports.decodePacket(msg, binaryType, false);\n\n      if (err.type === packet.type && err.data === packet.data) {\n        // parser error in individual packet - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      var ret = callback(packet, i + n, l);\n      if (false === ret) return;\n    }\n\n    // advance cursor\n    i += n;\n    length = '';\n  }\n\n  if (length !== '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function(err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function(acc, p) {\n      var len;\n      if (typeof p === 'string'){\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n\n    var resultArray = new Uint8Array(totalLength);\n\n    var bufferIndex = 0;\n    encodedPackets.forEach(function(p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n      if (isString) {\n        var view = new Uint8Array(p.length);\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n        ab = view.buffer;\n      }\n\n      if (isString) { // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else { // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n      resultArray[bufferIndex++] = 255;\n\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n\n    return callback(resultArray.buffer);\n  });\n};\n\n/**\n * Encode as Blob\n */\n\nexports.encodePayloadAsBlob = function(packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = (encoded instanceof ArrayBuffer)\n        ? encoded.byteLength\n        : encoded.size;\n\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(new Blob(results));\n  });\n};\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1; ; i++) {\n      if (tailArray[i] === 255) break;\n\n      // 310 = char length of Number.MAX_VALUE\n      if (msgLength.length > 310) {\n        return callback(err, 0, 1);\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function(buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\r\n\r\nexports.encode = function (obj) {\r\n  var str = '';\r\n\r\n  for (var i in obj) {\r\n    if (obj.hasOwnProperty(i)) {\r\n      if (str.length) str += '&';\r\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\r\n    }\r\n  }\r\n\r\n  return str;\r\n};\r\n\r\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\r\n\r\nexports.decode = function(qs){\r\n  var qry = {};\r\n  var pairs = qs.split('&');\r\n  for (var i = 0, l = pairs.length; i < l; i++) {\r\n    var pair = pairs[i].split('=');\r\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n  }\r\n  return qry;\r\n};\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/**\n * Module dependencies.\n */\n\nvar debug = __webpack_require__(1)('socket.io-parser');\nvar Emitter = __webpack_require__(2);\nvar hasBin = __webpack_require__(10);\nvar binary = __webpack_require__(27);\nvar isBuf = __webpack_require__(12);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'ACK',\n  'ERROR',\n  'BINARY_EVENT',\n  'BINARY_ACK'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n  if ((obj.type === exports.EVENT || obj.type === exports.ACK) && hasBin(obj.data)) {\n    obj.type = obj.type === exports.EVENT ? exports.BINARY_EVENT : exports.BINARY_ACK;\n  }\n\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    encodeAsBinary(obj, callback);\n  }\n  else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n\n  // first is type\n  var str = '' + obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    str += obj.attachments + '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' !== obj.nsp) {\n    str += obj.nsp + ',';\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    str += JSON.stringify(obj.data);\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an ecoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if (typeof obj === 'string') {\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  }\n  else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  }\n  else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var i = 0;\n  // look up type\n  var p = {\n    type: Number(str.charAt(0))\n  };\n\n  if (null == exports.types[p.type]) return error();\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\n    var buf = '';\n    while (str.charAt(++i) !== '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n    if (buf != Number(buf) || str.charAt(i) !== '-') {\n      throw new Error('Illegal attachments');\n    }\n    p.attachments = Number(buf);\n  }\n\n  // look up namespace (if any)\n  if ('/' === str.charAt(i + 1)) {\n    p.nsp = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' === c) break;\n      p.nsp += c;\n      if (i === str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      p.id += str.charAt(i);\n      if (i === str.length) break;\n    }\n    p.id = Number(p.id);\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    p = tryParse(p, str.substr(i));\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\nfunction tryParse(p, str) {\n  try {\n    p.data = JSON.parse(str);\n  } catch(e){\n    return error();\n  }\n  return p; \n}\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length === this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error() {\n  return {\n    type: exports.ERROR,\n    data: 'parser error'\n  };\n}\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// browser shim for xmlhttprequest module\n\nvar hasCORS = __webpack_require__(30);\n\nmodule.exports = function (opts) {\n  var xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  var xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  var enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) { }\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) { }\n\n  if (!xdomain) {\n    try {\n      return new global[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n    } catch (e) { }\n  }\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Module dependencies.\n */\n\nvar parser = __webpack_require__(3);\nvar Emitter = __webpack_require__(2);\n\n/**\n * Module exports.\n */\n\nmodule.exports = Transport;\n\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport (opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n  this.forceNode = opts.forceNode;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n  this.localAddress = opts.localAddress;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Transport.prototype);\n\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n\n/**\n * Opens the transport.\n *\n * @api public\n */\n\nTransport.prototype.open = function () {\n  if ('closed' === this.readyState || '' === this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\nTransport.prototype.send = function (packets) {\n  if ('open' === this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n\n/**\n * Called upon open\n *\n * @api private\n */\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function (data) {\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n\n/**\n * Called with a decoded packet.\n */\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n/**\r\n * Parses an URI\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\r\n\r\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\r\nvar parts = [\r\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\r\n];\r\n\r\nmodule.exports = function parseuri(str) {\r\n    var src = str,\r\n        b = str.indexOf('['),\r\n        e = str.indexOf(']');\r\n\r\n    if (b != -1 && e != -1) {\r\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\r\n    }\r\n\r\n    var m = re.exec(str || ''),\r\n        uri = {},\r\n        i = 14;\r\n\r\n    while (i--) {\r\n        uri[parts[i]] = m[i] || '';\r\n    }\r\n\r\n    if (b != -1 && e != -1) {\r\n        uri.source = src;\r\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\r\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\r\n        uri.ipv6uri = true;\r\n    }\r\n\r\n    return uri;\r\n};\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/* global Blob File */\n\n/*\n * Module requirements.\n */\n\nvar isArray = __webpack_require__(11);\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof global.Blob === 'function' || toString.call(global.Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof global.File === 'function' || toString.call(global.File) === '[object FileConstructor]';\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Supports Buffer, ArrayBuffer, Blob and File.\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary (obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  if (isArray(obj)) {\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (hasBinary(obj[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  if ((typeof global.Buffer === 'function' && global.Buffer.isBuffer && global.Buffer.isBuffer(obj)) ||\n     (typeof global.ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||\n     (withNativeBlob && obj instanceof Blob) ||\n     (withNativeFile && obj instanceof File)\n    ) {\n    return true;\n  }\n\n  // see: https://github.com/Automattic/has-binary/pull/4\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n    return hasBinary(obj.toJSON(), true);\n  }\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\nvar toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {\nmodule.exports = isBuf;\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (global.Buffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer);\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/**\n * Module dependencies.\n */\n\nvar eio = __webpack_require__(28);\nvar Socket = __webpack_require__(18);\nvar Emitter = __webpack_require__(2);\nvar parser = __webpack_require__(6);\nvar on = __webpack_require__(19);\nvar bind = __webpack_require__(20);\nvar debug = __webpack_require__(1)('socket.io-client:manager');\nvar indexOf = __webpack_require__(17);\nvar Backoff = __webpack_require__(43);\n\n/**\n * IE6+ hasOwnProperty\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager (uri, opts) {\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' === typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n  var _parser = opts.parser || parser;\n  this.encoder = new _parser.Encoder();\n  this.decoder = new _parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function () {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function () {\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.generateId(nsp);\n    }\n  }\n};\n\n/**\n * generate `socket.id` for the given `nsp`\n *\n * @param {String} nsp\n * @return {String}\n * @api private\n */\n\nManager.prototype.generateId = function (nsp) {\n  return (nsp === '/' ? '' : (nsp + '#')) + this.engine.id;\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function (v) {\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function (v) {\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function (v) {\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function (v) {\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function (v) {\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function (v) {\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function () {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function (fn, opts) {\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function () {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function (data) {\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    // set timer\n    var timer = setTimeout(function () {\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function () {\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\nManager.prototype.onping = function () {\n  this.lastPing = new Date();\n  this.emitAll('ping');\n};\n\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\nManager.prototype.onpong = function () {\n  this.emitAll('pong', new Date() - this.lastPing);\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function (data) {\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function (err) {\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function (nsp, opts) {\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp, opts);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function () {\n      socket.id = self.generateId(nsp);\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting event is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting () {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function (socket) {\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function (packet) {\n  debug('writing packet %j', packet);\n  var self = this;\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function (encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function () {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function () {\n  debug('cleanup');\n\n  var subsLength = this.subs.length;\n  for (var i = 0; i < subsLength; i++) {\n    var sub = this.subs.shift();\n    sub.destroy();\n  }\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function () {\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n  if ('opening' === this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function (reason) {\n  debug('onclose');\n\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function () {\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n\n    this.reconnecting = true;\n    var timer = setTimeout(function () {\n      if (self.skipReconnect) return;\n\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function (err) {\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function () {\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * Module dependencies\n */\n\nvar XMLHttpRequest = __webpack_require__(7);\nvar XHR = __webpack_require__(31);\nvar JSONP = __webpack_require__(39);\nvar websocket = __webpack_require__(40);\n\n/**\n * Export transports.\n */\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling (opts) {\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Module dependencies.\n */\n\nvar Transport = __webpack_require__(8);\nvar parseqs = __webpack_require__(4);\nvar parser = __webpack_require__(3);\nvar inherit = __webpack_require__(5);\nvar yeast = __webpack_require__(16);\nvar debug = __webpack_require__(1)('engine.io-client:polling');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Polling;\n\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = (function () {\n  var XMLHttpRequest = __webpack_require__(7);\n  var xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\nfunction Polling (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(Polling, Transport);\n\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function () {\n  this.poll();\n};\n\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\nPolling.prototype.pause = function (onPause) {\n  var self = this;\n\n  this.readyState = 'pausing';\n\n  function pause () {\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function () {\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function () {\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\nPolling.prototype.poll = function () {\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\nPolling.prototype.onData = function (data) {\n  var self = this;\n  debug('polling got data %s', data);\n  var callback = function (packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' === self.readyState) {\n      self.onOpen();\n    }\n\n    // if its a close packet, we close the ongoing requests\n    if ('close' === packet.type) {\n      self.onClose();\n      return false;\n    }\n\n    // otherwise bypass onData and handle the message\n    self.onPacket(packet);\n  };\n\n  // decode payload\n  parser.decodePayload(data, this.socket.binaryType, callback);\n\n  // if an event did not trigger closing\n  if ('closed' !== this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' === this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function () {\n  var self = this;\n\n  function close () {\n    debug('writing close packet');\n    self.write([{ type: 'close' }]);\n  }\n\n  if ('open' === this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\nPolling.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n  var callbackfn = function () {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nPolling.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = '';\n\n  // cache busting is forced\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // avoid port if default for schema\n  if (this.port && (('https' === schema && Number(this.port) !== 443) ||\n     ('http' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/**\n * Module dependencies.\n */\n\nvar parser = __webpack_require__(6);\nvar Emitter = __webpack_require__(2);\nvar toArray = __webpack_require__(42);\nvar on = __webpack_require__(19);\nvar bind = __webpack_require__(20);\nvar debug = __webpack_require__(1)('socket.io-client:socket');\nvar parseqs = __webpack_require__(4);\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket (io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n  if (this.io.autoConnect) this.open();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function () {\n  if (this.connected) return this;\n\n  this.subEvents();\n  this.io.open(); // ensure open\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var packet = { type: parser.EVENT, data: args };\n\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress;\n\n  // event ack callback\n  if ('function' === typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  delete this.flags;\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\n      debug('sending connect packet with query %s', query);\n      this.packet({type: parser.CONNECT, query: query});\n    } else {\n      this.packet({type: parser.CONNECT});\n    }\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function (packet) {\n  if (packet.nsp !== this.nsp) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n\n    self.packet({\n      type: parser.ACK,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n  if ('function' === typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function () {\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function (compress) {\n  this.flags = this.flags || {};\n  this.flags.compress = compress;\n  return this;\n};\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\n\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on (obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function () {\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\n/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar io = __webpack_require__(22);\r\nvar SocketIndoorLocationProvider = /** @class */ (function () {\r\n    function SocketIndoorLocationProvider(socketUrl, userId) {\r\n        var self = this;\r\n        self.listeners = [];\r\n        self.connection = io(socketUrl, {\r\n            autoConnect: false,\r\n            query: {\r\n                userId: userId\r\n            }\r\n        });\r\n        this.connection.on('connect', function () {\r\n            console.log('connection started');\r\n        });\r\n        this.connection.on('indoorLocationChange', function (userIndoorLocation) {\r\n            for (var _i = 0, _a = self.listeners; _i < _a.length; _i++) {\r\n                var callback = _a[_i];\r\n                callback(null, userIndoorLocation);\r\n            }\r\n        });\r\n        this.connection.on('error', function (err) {\r\n            for (var _i = 0, _a = self.listeners; _i < _a.length; _i++) {\r\n                var callback = _a[_i];\r\n                callback(err, null);\r\n            }\r\n        });\r\n    }\r\n    SocketIndoorLocationProvider.prototype.start = function () {\r\n        console.log('start');\r\n        this.connection.open();\r\n    };\r\n    SocketIndoorLocationProvider.prototype.stop = function () {\r\n        console.log('close');\r\n        this.connection.close();\r\n    };\r\n    SocketIndoorLocationProvider.prototype.addListener = function (callback) {\r\n        this.listeners.push(callback);\r\n    };\r\n    SocketIndoorLocationProvider.prototype.removeListener = function (callback) {\r\n        var index = this.listeners.indexOf(callback, 0);\r\n        if (index > -1) {\r\n            this.listeners.splice(index, 1);\r\n        }\r\n    };\r\n    SocketIndoorLocationProvider.prototype.isStarted = function () {\r\n        return !!this.connection.id;\r\n    };\r\n    SocketIndoorLocationProvider.prototype.supportsFloor = function () {\r\n        return true;\r\n    };\r\n    SocketIndoorLocationProvider.prototype.getName = function () {\r\n        return 'socket';\r\n    };\r\n    return SocketIndoorLocationProvider;\r\n}());\r\nmodule.exports = SocketIndoorLocationProvider;\r\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/**\n * Module dependencies.\n */\n\nvar url = __webpack_require__(23);\nvar parser = __webpack_require__(6);\nvar Manager = __webpack_require__(13);\nvar debug = __webpack_require__(1)('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup (uri, opts) {\n  if (typeof uri === 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] ||\n                      false === opts.multiplex || sameNamespace;\n\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.query;\n  }\n  return io.socket(parsed.path, opts);\n}\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = __webpack_require__(13);\nexports.Socket = __webpack_require__(18);\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {\n/**\n * Module dependencies.\n */\n\nvar parseuri = __webpack_require__(9);\nvar debug = __webpack_require__(1)('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url (uri, loc) {\n  var obj = uri;\n\n  // default to window.location\n  loc = loc || global.location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' === typeof uri) {\n    if ('/' === uri.charAt(0)) {\n      if ('/' === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n      if ('undefined' !== typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n  // define unique id\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = __webpack_require__(26);\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\n/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = __webpack_require__(11);\nvar isBuf = __webpack_require__(12);\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof global.Blob === 'function' || toString.call(global.Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof global.File === 'function' || toString.call(global.File) === '[object FileConstructor]';\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet) {\n  var buffers = [];\n  var packetData = packet.data;\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData, buffers);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\nfunction _deconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (isBuf(data)) {\n    var placeholder = { _placeholder: true, num: buffers.length };\n    buffers.push(data);\n    return placeholder;\n  } else if (isArray(data)) {\n    var newData = new Array(data.length);\n    for (var i = 0; i < data.length; i++) {\n      newData[i] = _deconstructPacket(data[i], buffers);\n    }\n    return newData;\n  } else if (typeof data === 'object' && !(data instanceof Date)) {\n    var newData = {};\n    for (var key in data) {\n      newData[key] = _deconstructPacket(data[key], buffers);\n    }\n    return newData;\n  }\n  return data;\n}\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  packet.data = _reconstructPacket(packet.data, buffers);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\nfunction _reconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (data && data._placeholder) {\n    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n  } else if (isArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      data[i] = _reconstructPacket(data[i], buffers);\n    }\n  } else if (typeof data === 'object') {\n    for (var key in data) {\n      data[key] = _reconstructPacket(data[key], buffers);\n    }\n  }\n\n  return data;\n}\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (typeof obj === 'object' && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\nmodule.exports = __webpack_require__(29);\n\n/**\n * Exports parser\n *\n * @api public\n *\n */\nmodule.exports.parser = __webpack_require__(3);\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * Module dependencies.\n */\n\nvar transports = __webpack_require__(14);\nvar Emitter = __webpack_require__(2);\nvar debug = __webpack_require__(1)('engine.io-client:socket');\nvar index = __webpack_require__(17);\nvar parser = __webpack_require__(3);\nvar parseuri = __webpack_require__(9);\nvar parseqs = __webpack_require__(4);\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket (uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure\n    : (global.location && 'https:' === location.protocol);\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname ||\n    (global.location ? location.hostname : 'localhost');\n  this.port = opts.port || (global.location && location.port\n      ? location.port\n      : (this.secure ? 443 : 80));\n  this.query = opts.query || {};\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.transportOptions = opts.transportOptions || {};\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.prevBufferLen = 0;\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  }\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n  this.forceNode = !!opts.forceNode;\n\n  // other options for Node.js client\n  var freeGlobal = typeof global === 'object' && global;\n  if (freeGlobal.global === freeGlobal) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n\n    if (opts.localAddress) {\n      this.localAddress = opts.localAddress;\n    }\n  }\n\n  // set on handshake\n  this.id = null;\n  this.upgrades = null;\n  this.pingInterval = null;\n  this.pingTimeout = null;\n\n  // set on heartbeat\n  this.pingIntervalTimer = null;\n  this.pingTimeoutTimer = null;\n\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = __webpack_require__(8);\nSocket.transports = __webpack_require__(14);\nSocket.parser = __webpack_require__(3);\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // per-transport options\n  var options = this.transportOptions[name] || {};\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    query: query,\n    socket: this,\n    agent: options.agent || this.agent,\n    hostname: options.hostname || this.hostname,\n    port: options.port || this.port,\n    secure: options.secure || this.secure,\n    path: options.path || this.path,\n    forceJSONP: options.forceJSONP || this.forceJSONP,\n    jsonp: options.jsonp || this.jsonp,\n    forceBase64: options.forceBase64 || this.forceBase64,\n    enablesXDR: options.enablesXDR || this.enablesXDR,\n    timestampRequests: options.timestampRequests || this.timestampRequests,\n    timestampParam: options.timestampParam || this.timestampParam,\n    policyPort: options.policyPort || this.policyPort,\n    pfx: options.pfx || this.pfx,\n    key: options.key || this.key,\n    passphrase: options.passphrase || this.passphrase,\n    cert: options.cert || this.cert,\n    ca: options.ca || this.ca,\n    ciphers: options.ciphers || this.ciphers,\n    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\n    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\n    extraHeaders: options.extraHeaders || this.extraHeaders,\n    forceNode: options.forceNode || this.forceNode,\n    localAddress: options.localAddress || this.localAddress,\n    requestTimeout: options.requestTimeout || this.requestTimeout,\n    protocols: options.protocols || void (0)\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function () {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function (transport) {\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n  .on('drain', function () {\n    self.onDrain();\n  })\n  .on('packet', function (packet) {\n    self.onPacket(packet);\n  })\n  .on('error', function (e) {\n    self.onError(e);\n  })\n  .on('close', function () {\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, { probe: 1 });\n  var failed = false;\n  var self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen () {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' === self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport () {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  // Handle any error that happens while probing\n  function onerror (err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose () {\n    onerror('transport closed');\n  }\n\n  // When the socket is closed while we're probing\n  function onclose () {\n    onerror('socket closed');\n  }\n\n  // When the socket is upgraded while we're probing\n  function onupgrade (to) {\n    if (transport && to.name !== transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  // Remove all listeners on the transport and on self\n  function cleanup () {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' === this.readyState || 'open' === this.readyState ||\n      'closing' === this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(JSON.parse(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if ('closed' === this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' === self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || (self.pingInterval + self.pingTimeout));\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function () {\n    self.emit('ping');\n  });\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function () {\n  this.writeBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' !== this.readyState && this.transport.writable &&\n    !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write =\nSocket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' === typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing';\n\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function () {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close () {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose () {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade () {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n\n    // clean buffers after, so users can still\n    // grab the buffers on `close` event\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports) {\n\n\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * Module requirements.\n */\n\nvar XMLHttpRequest = __webpack_require__(7);\nvar Polling = __webpack_require__(15);\nvar Emitter = __webpack_require__(2);\nvar inherit = __webpack_require__(5);\nvar debug = __webpack_require__(1)('engine.io-client:polling-xhr');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n/**\n * Empty function\n */\n\nfunction empty () {}\n\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction XHR (opts) {\n  Polling.call(this, opts);\n  this.requestTimeout = opts.requestTimeout;\n  this.extraHeaders = opts.extraHeaders;\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = opts.hostname !== global.location.hostname ||\n      port !== opts.port;\n    this.xs = opts.secure !== isSSL;\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling);\n\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function (opts) {\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  opts.requestTimeout = this.requestTimeout;\n\n  // other options for Node.js client\n  opts.extraHeaders = this.extraHeaders;\n\n  return new Request(opts);\n};\n\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\nXHR.prototype.doWrite = function (data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function (err) {\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nXHR.prototype.doPoll = function () {\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function (data) {\n    self.onData(data);\n  });\n  req.on('error', function (err) {\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Request (opts) {\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined !== opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n  this.requestTimeout = opts.requestTimeout;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n\n  this.create();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function () {\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n\n    if ('POST' === this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    try {\n      xhr.setRequestHeader('Accept', '*/*');\n    } catch (e) {}\n\n    // ie6 check\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    if (this.requestTimeout) {\n      xhr.timeout = this.requestTimeout;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function () {\n        self.onLoad();\n      };\n      xhr.onerror = function () {\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 2) {\n          var contentType;\n          try {\n            contentType = xhr.getResponseHeader('Content-Type');\n          } catch (e) {}\n          if (contentType === 'application/octet-stream') {\n            xhr.responseType = 'arraybuffer';\n          }\n        }\n        if (4 !== xhr.readyState) return;\n        if (200 === xhr.status || 1223 === xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function () {\n            self.onError(xhr.status);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function () {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (global.document) {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function () {\n  this.emit('success');\n  this.cleanup();\n};\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function (data) {\n  this.emit('data', data);\n  this.onSuccess();\n};\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function (err) {\n  this.emit('error', err);\n  this.cleanup(true);\n};\n\n/**\n * Cleans up house.\n *\n * @api private\n */\n\nRequest.prototype.cleanup = function (fromError) {\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\n    return;\n  }\n  // xmlhttprequest\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch (e) {}\n  }\n\n  if (global.document) {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function () {\n  var data;\n  try {\n    var contentType;\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type');\n    } catch (e) {}\n    if (contentType === 'application/octet-stream') {\n      data = this.xhr.response || this.xhr.responseText;\n    } else {\n      data = this.xhr.responseText;\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n  if (null != data) {\n    this.onData(data);\n  }\n};\n\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\nRequest.prototype.hasXDR = function () {\n  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n};\n\n/**\n * Aborts the request.\n *\n * @api public\n */\n\nRequest.prototype.abort = function () {\n  this.cleanup();\n};\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (global.document) {\n  if (global.attachEvent) {\n    global.attachEvent('onunload', unloadHandler);\n  } else if (global.addEventListener) {\n    global.addEventListener('beforeunload', unloadHandler, false);\n  }\n}\n\nfunction unloadHandler () {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\n\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\n/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports) {\n\nmodule.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! https://mths.be/utf8js v2.1.2 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint, strict) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tif (strict) {\n\t\t\t\tthrow Error(\n\t\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t\t' is not a scalar value'\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint, strict) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tif (!checkScalarValue(codePoint, strict)) {\n\t\t\t\tcodePoint = 0xFFFD;\n\t\t\t}\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string, opts) {\n\t\topts = opts || {};\n\t\tvar strict = false !== opts.strict;\n\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint, strict);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol(strict) {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\treturn checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString, opts) {\n\t\topts = opts || {};\n\t\tvar strict = false !== opts.strict;\n\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol(strict)) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar utf8 = {\n\t\t'version': '2.1.2',\n\t\t'encode': utf8encode,\n\t\t'decode': utf8decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttrue\n\t) {\n\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\treturn utf8;\n\t\t}.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = utf8;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tvar object = {};\n\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\tfor (var key in utf8) {\n\t\t\t\thasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.utf8 = utf8;\n\t}\n\n}(this));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(36)(module), __webpack_require__(0)))\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif(!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports) {\n\n/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(){\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n  // Use a lookup table to find the index.\n  var lookup = new Uint8Array(256);\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i+1)];\n      encoded3 = lookup[base64.charCodeAt(i+2)];\n      encoded4 = lookup[base64.charCodeAt(i+3)];\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})();\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * Create a blob builder even when vendor prefixes exist\n */\n\nvar BlobBuilder = global.BlobBuilder\n  || global.WebKitBlobBuilder\n  || global.MSBlobBuilder\n  || global.MozBlobBuilder;\n\n/**\n * Check if Blob constructor is supported\n */\n\nvar blobSupported = (function() {\n  try {\n    var a = new Blob(['hi']);\n    return a.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if Blob constructor supports ArrayBufferViews\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\n */\n\nvar blobSupportsArrayBufferView = blobSupported && (function() {\n  try {\n    var b = new Blob([new Uint8Array([1,2])]);\n    return b.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if BlobBuilder is supported\n */\n\nvar blobBuilderSupported = BlobBuilder\n  && BlobBuilder.prototype.append\n  && BlobBuilder.prototype.getBlob;\n\n/**\n * Helper function that maps ArrayBufferViews to ArrayBuffers\n * Used by BlobBuilder constructor and old browsers that didn't\n * support it in the Blob constructor.\n */\n\nfunction mapArrayBufferViews(ary) {\n  for (var i = 0; i < ary.length; i++) {\n    var chunk = ary[i];\n    if (chunk.buffer instanceof ArrayBuffer) {\n      var buf = chunk.buffer;\n\n      // if this is a subarray, make a copy so we only\n      // include the subarray region from the underlying buffer\n      if (chunk.byteLength !== buf.byteLength) {\n        var copy = new Uint8Array(chunk.byteLength);\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n        buf = copy.buffer;\n      }\n\n      ary[i] = buf;\n    }\n  }\n}\n\nfunction BlobBuilderConstructor(ary, options) {\n  options = options || {};\n\n  var bb = new BlobBuilder();\n  mapArrayBufferViews(ary);\n\n  for (var i = 0; i < ary.length; i++) {\n    bb.append(ary[i]);\n  }\n\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\n};\n\nfunction BlobConstructor(ary, options) {\n  mapArrayBufferViews(ary);\n  return new Blob(ary, options || {});\n};\n\nmodule.exports = (function() {\n  if (blobSupported) {\n    return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\n  } else if (blobBuilderSupported) {\n    return BlobBuilderConstructor;\n  } else {\n    return undefined;\n  }\n})();\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {\n/**\n * Module requirements.\n */\n\nvar Polling = __webpack_require__(15);\nvar inherit = __webpack_require__(5);\n\n/**\n * Module exports.\n */\n\nmodule.exports = JSONPPolling;\n\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n\n/**\n * Noop.\n */\n\nfunction empty () { }\n\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\nfunction JSONPPolling (opts) {\n  Polling.call(this, opts);\n\n  this.query = this.query || {};\n\n  // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    if (!global.___eio) global.___eio = [];\n    callbacks = global.___eio;\n  }\n\n  // callback identifier\n  this.index = callbacks.length;\n\n  // add callback to jsonp global\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  });\n\n  // append to query string\n  this.query.j = this.index;\n\n  // prevent spurious errors from being emitted when the window is unloaded\n  if (global.document && global.addEventListener) {\n    global.addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(JSONPPolling, Polling);\n\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n  script.onerror = function (e) {\n    self.onError('jsonp poll error', e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n  if (insertAt) {\n    insertAt.parentNode.insertBefore(script, insertAt);\n  } else {\n    (document.head || document.body).appendChild(script);\n  }\n  this.script = script;\n\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete () {\n    initIframe();\n    fn();\n  }\n\n  function initIframe () {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe();\n\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch (e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function () {\n      if (self.iframe.readyState === 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * Module dependencies.\n */\n\nvar Transport = __webpack_require__(8);\nvar parser = __webpack_require__(3);\nvar parseqs = __webpack_require__(4);\nvar inherit = __webpack_require__(5);\nvar yeast = __webpack_require__(16);\nvar debug = __webpack_require__(1)('engine.io-client:websocket');\nvar BrowserWebSocket = global.WebSocket || global.MozWebSocket;\nvar NodeWebSocket;\nif (typeof window === 'undefined') {\n  try {\n    NodeWebSocket = __webpack_require__(41);\n  } catch (e) { }\n}\n\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\nvar WebSocket = BrowserWebSocket;\nif (!WebSocket && typeof window === 'undefined') {\n  WebSocket = NodeWebSocket;\n}\n\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  this.perMessageDeflate = opts.perMessageDeflate;\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\n  this.protocols = opts.protocols;\n  if (!this.usingBrowserWebSocket) {\n    WebSocket = NodeWebSocket;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport);\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function () {\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var uri = this.uri();\n  var protocols = this.protocols;\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate\n  };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n  if (this.localAddress) {\n    opts.localAddress = this.localAddress;\n  }\n\n  try {\n    this.ws = this.usingBrowserWebSocket ? (protocols ? new WebSocket(uri, protocols) : new WebSocket(uri)) : new WebSocket(uri, protocols, opts);\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'nodebuffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function () {\n  var self = this;\n\n  this.ws.onopen = function () {\n    self.onOpen();\n  };\n  this.ws.onclose = function () {\n    self.onClose();\n  };\n  this.ws.onmessage = function (ev) {\n    self.onData(ev.data);\n  };\n  this.ws.onerror = function (e) {\n    self.onError('websocket error', e);\n  };\n};\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n\n  // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n  var total = packets.length;\n  for (var i = 0, l = total; i < l; i++) {\n    (function (packet) {\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\n        if (!self.usingBrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' === typeof data ? global.Buffer.byteLength(data) : data.length;\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n        try {\n          if (self.usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done () {\n    self.emit('flush');\n\n    // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n    setTimeout(function () {\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function () {\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function () {\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = '';\n\n  // avoid port if default for schema\n  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||\n    ('ws' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\nWS.prototype.check = function () {\n  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports) {\n\n/* (ignored) */\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports) {\n\nmodule.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports) {\n\n\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// socketIndoorLocationProvider.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 33035d596f2a4d910da1","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 0\n// module chunks = 0 1","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/debug/src/browser.js\n// module id = 1\n// module chunks = 0 1","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/component-emitter/index.js\n// module id = 2\n// module chunks = 0 1","/**\n * Module dependencies.\n */\n\nvar keys = require('./keys');\nvar hasBinary = require('has-binary2');\nvar sliceBuffer = require('arraybuffer.slice');\nvar after = require('after');\nvar utf8 = require('./utf8');\n\nvar base64encoder;\nif (global && global.ArrayBuffer) {\n  base64encoder = require('base64-arraybuffer');\n}\n\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\nvar dontSendBlobs = isAndroid || isPhantomJS;\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if (typeof utf8encode === 'function') {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = (packet.data === undefined)\n    ? undefined\n    : packet.data.buffer || packet.data;\n\n  if (global.ArrayBuffer && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (Blob && data instanceof global.Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  }\n\n  // might be an object with { base64: true, data: dataAsBase64String }\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n\n/**\n * Encode packet helpers for binary types\n */\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n  resultBuffer[0] = packets[packet.type];\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i+1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n  fr.onload = function() {\n    packet.data = fr.result;\n    exports.encodePacket(packet, supportsBinary, true, callback);\n  };\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n\n  return callback(blob);\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n  if (Blob && packet.data instanceof global.Blob) {\n    var fr = new FileReader();\n    fr.onload = function() {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n  message += global.btoa(b64data);\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  }\n  // String data\n  if (typeof data === 'string') {\n    if (data.charAt(0) === 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      data = tryDecode(data);\n      if (data === false) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n  return { type: packetslist[type], data: rest };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data, { strict: false });\n  } catch (e) {\n    return false;\n  }\n  return data;\n}\n\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  if (!base64encoder) {\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data !== 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data === '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = '', n, msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (chr !== ':') {\n      length += chr;\n      continue;\n    }\n\n    if (length === '' || (length != (n = Number(length)))) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    msg = data.substr(i + 1, n);\n\n    if (length != msg.length) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    if (msg.length) {\n      packet = exports.decodePacket(msg, binaryType, false);\n\n      if (err.type === packet.type && err.data === packet.data) {\n        // parser error in individual packet - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      var ret = callback(packet, i + n, l);\n      if (false === ret) return;\n    }\n\n    // advance cursor\n    i += n;\n    length = '';\n  }\n\n  if (length !== '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function(err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function(acc, p) {\n      var len;\n      if (typeof p === 'string'){\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n\n    var resultArray = new Uint8Array(totalLength);\n\n    var bufferIndex = 0;\n    encodedPackets.forEach(function(p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n      if (isString) {\n        var view = new Uint8Array(p.length);\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n        ab = view.buffer;\n      }\n\n      if (isString) { // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else { // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n      resultArray[bufferIndex++] = 255;\n\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n\n    return callback(resultArray.buffer);\n  });\n};\n\n/**\n * Encode as Blob\n */\n\nexports.encodePayloadAsBlob = function(packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = (encoded instanceof ArrayBuffer)\n        ? encoded.byteLength\n        : encoded.size;\n\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(new Blob(results));\n  });\n};\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1; ; i++) {\n      if (tailArray[i] === 255) break;\n\n      // 310 = char length of Number.MAX_VALUE\n      if (msgLength.length > 310) {\n        return callback(err, 0, 1);\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function(buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/engine.io-parser/lib/browser.js\n// module id = 3\n// module chunks = 0 1","/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\r\n\r\nexports.encode = function (obj) {\r\n  var str = '';\r\n\r\n  for (var i in obj) {\r\n    if (obj.hasOwnProperty(i)) {\r\n      if (str.length) str += '&';\r\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\r\n    }\r\n  }\r\n\r\n  return str;\r\n};\r\n\r\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\r\n\r\nexports.decode = function(qs){\r\n  var qry = {};\r\n  var pairs = qs.split('&');\r\n  for (var i = 0, l = pairs.length; i < l; i++) {\r\n    var pair = pairs[i].split('=');\r\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n  }\r\n  return qry;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/parseqs/index.js\n// module id = 4\n// module chunks = 0 1","\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/component-inherit/index.js\n// module id = 5\n// module chunks = 0 1","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar hasBin = require('has-binary2');\nvar binary = require('./binary');\nvar isBuf = require('./is-buffer');\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'ACK',\n  'ERROR',\n  'BINARY_EVENT',\n  'BINARY_ACK'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n  if ((obj.type === exports.EVENT || obj.type === exports.ACK) && hasBin(obj.data)) {\n    obj.type = obj.type === exports.EVENT ? exports.BINARY_EVENT : exports.BINARY_ACK;\n  }\n\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    encodeAsBinary(obj, callback);\n  }\n  else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n\n  // first is type\n  var str = '' + obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    str += obj.attachments + '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' !== obj.nsp) {\n    str += obj.nsp + ',';\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    str += JSON.stringify(obj.data);\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an ecoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if (typeof obj === 'string') {\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  }\n  else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  }\n  else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var i = 0;\n  // look up type\n  var p = {\n    type: Number(str.charAt(0))\n  };\n\n  if (null == exports.types[p.type]) return error();\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\n    var buf = '';\n    while (str.charAt(++i) !== '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n    if (buf != Number(buf) || str.charAt(i) !== '-') {\n      throw new Error('Illegal attachments');\n    }\n    p.attachments = Number(buf);\n  }\n\n  // look up namespace (if any)\n  if ('/' === str.charAt(i + 1)) {\n    p.nsp = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' === c) break;\n      p.nsp += c;\n      if (i === str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      p.id += str.charAt(i);\n      if (i === str.length) break;\n    }\n    p.id = Number(p.id);\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    p = tryParse(p, str.substr(i));\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\nfunction tryParse(p, str) {\n  try {\n    p.data = JSON.parse(str);\n  } catch(e){\n    return error();\n  }\n  return p; \n}\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length === this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error() {\n  return {\n    type: exports.ERROR,\n    data: 'parser error'\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/socket.io-parser/index.js\n// module id = 6\n// module chunks = 0 1","// browser shim for xmlhttprequest module\n\nvar hasCORS = require('has-cors');\n\nmodule.exports = function (opts) {\n  var xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  var xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  var enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) { }\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) { }\n\n  if (!xdomain) {\n    try {\n      return new global[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n    } catch (e) { }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/engine.io-client/lib/xmlhttprequest.js\n// module id = 7\n// module chunks = 0 1","/**\n * Module dependencies.\n */\n\nvar parser = require('engine.io-parser');\nvar Emitter = require('component-emitter');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Transport;\n\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport (opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n  this.forceNode = opts.forceNode;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n  this.localAddress = opts.localAddress;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Transport.prototype);\n\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n\n/**\n * Opens the transport.\n *\n * @api public\n */\n\nTransport.prototype.open = function () {\n  if ('closed' === this.readyState || '' === this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\nTransport.prototype.send = function (packets) {\n  if ('open' === this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n\n/**\n * Called upon open\n *\n * @api private\n */\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function (data) {\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n\n/**\n * Called with a decoded packet.\n */\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/engine.io-client/lib/transport.js\n// module id = 8\n// module chunks = 0 1","/**\r\n * Parses an URI\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\r\n\r\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\r\nvar parts = [\r\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\r\n];\r\n\r\nmodule.exports = function parseuri(str) {\r\n    var src = str,\r\n        b = str.indexOf('['),\r\n        e = str.indexOf(']');\r\n\r\n    if (b != -1 && e != -1) {\r\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\r\n    }\r\n\r\n    var m = re.exec(str || ''),\r\n        uri = {},\r\n        i = 14;\r\n\r\n    while (i--) {\r\n        uri[parts[i]] = m[i] || '';\r\n    }\r\n\r\n    if (b != -1 && e != -1) {\r\n        uri.source = src;\r\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\r\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\r\n        uri.ipv6uri = true;\r\n    }\r\n\r\n    return uri;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/parseuri/index.js\n// module id = 9\n// module chunks = 0 1","/* global Blob File */\n\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof global.Blob === 'function' || toString.call(global.Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof global.File === 'function' || toString.call(global.File) === '[object FileConstructor]';\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Supports Buffer, ArrayBuffer, Blob and File.\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary (obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  if (isArray(obj)) {\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (hasBinary(obj[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  if ((typeof global.Buffer === 'function' && global.Buffer.isBuffer && global.Buffer.isBuffer(obj)) ||\n     (typeof global.ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||\n     (withNativeBlob && obj instanceof Blob) ||\n     (withNativeFile && obj instanceof File)\n    ) {\n    return true;\n  }\n\n  // see: https://github.com/Automattic/has-binary/pull/4\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n    return hasBinary(obj.toJSON(), true);\n  }\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/has-binary2/index.js\n// module id = 10\n// module chunks = 0 1","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/isarray/index.js\n// module id = 11\n// module chunks = 0 1","\nmodule.exports = isBuf;\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (global.Buffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/socket.io-parser/is-buffer.js\n// module id = 12\n// module chunks = 0 1","\n/**\n * Module dependencies.\n */\n\nvar eio = require('engine.io-client');\nvar Socket = require('./socket');\nvar Emitter = require('component-emitter');\nvar parser = require('socket.io-parser');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:manager');\nvar indexOf = require('indexof');\nvar Backoff = require('backo2');\n\n/**\n * IE6+ hasOwnProperty\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager (uri, opts) {\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' === typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n  var _parser = opts.parser || parser;\n  this.encoder = new _parser.Encoder();\n  this.decoder = new _parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function () {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function () {\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.generateId(nsp);\n    }\n  }\n};\n\n/**\n * generate `socket.id` for the given `nsp`\n *\n * @param {String} nsp\n * @return {String}\n * @api private\n */\n\nManager.prototype.generateId = function (nsp) {\n  return (nsp === '/' ? '' : (nsp + '#')) + this.engine.id;\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function (v) {\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function (v) {\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function (v) {\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function (v) {\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function (v) {\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function (v) {\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function () {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function (fn, opts) {\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function () {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function (data) {\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    // set timer\n    var timer = setTimeout(function () {\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function () {\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\nManager.prototype.onping = function () {\n  this.lastPing = new Date();\n  this.emitAll('ping');\n};\n\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\nManager.prototype.onpong = function () {\n  this.emitAll('pong', new Date() - this.lastPing);\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function (data) {\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function (err) {\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function (nsp, opts) {\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp, opts);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function () {\n      socket.id = self.generateId(nsp);\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting event is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting () {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function (socket) {\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function (packet) {\n  debug('writing packet %j', packet);\n  var self = this;\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function (encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function () {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function () {\n  debug('cleanup');\n\n  var subsLength = this.subs.length;\n  for (var i = 0; i < subsLength; i++) {\n    var sub = this.subs.shift();\n    sub.destroy();\n  }\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function () {\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n  if ('opening' === this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function (reason) {\n  debug('onclose');\n\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function () {\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n\n    this.reconnecting = true;\n    var timer = setTimeout(function () {\n      if (self.skipReconnect) return;\n\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function (err) {\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function () {\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/socket.io-client/lib/manager.js\n// module id = 13\n// module chunks = 0 1","/**\n * Module dependencies\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar XHR = require('./polling-xhr');\nvar JSONP = require('./polling-jsonp');\nvar websocket = require('./websocket');\n\n/**\n * Export transports.\n */\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling (opts) {\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/engine.io-client/lib/transports/index.js\n// module id = 14\n// module chunks = 0 1","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parseqs = require('parseqs');\nvar parser = require('engine.io-parser');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:polling');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Polling;\n\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = (function () {\n  var XMLHttpRequest = require('xmlhttprequest-ssl');\n  var xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\nfunction Polling (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(Polling, Transport);\n\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function () {\n  this.poll();\n};\n\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\nPolling.prototype.pause = function (onPause) {\n  var self = this;\n\n  this.readyState = 'pausing';\n\n  function pause () {\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function () {\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function () {\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\nPolling.prototype.poll = function () {\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\nPolling.prototype.onData = function (data) {\n  var self = this;\n  debug('polling got data %s', data);\n  var callback = function (packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' === self.readyState) {\n      self.onOpen();\n    }\n\n    // if its a close packet, we close the ongoing requests\n    if ('close' === packet.type) {\n      self.onClose();\n      return false;\n    }\n\n    // otherwise bypass onData and handle the message\n    self.onPacket(packet);\n  };\n\n  // decode payload\n  parser.decodePayload(data, this.socket.binaryType, callback);\n\n  // if an event did not trigger closing\n  if ('closed' !== this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' === this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function () {\n  var self = this;\n\n  function close () {\n    debug('writing close packet');\n    self.write([{ type: 'close' }]);\n  }\n\n  if ('open' === this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\nPolling.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n  var callbackfn = function () {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nPolling.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = '';\n\n  // cache busting is forced\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // avoid port if default for schema\n  if (this.port && (('https' === schema && Number(this.port) !== 443) ||\n     ('http' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/engine.io-client/lib/transports/polling.js\n// module id = 15\n// module chunks = 0 1","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/yeast/index.js\n// module id = 16\n// module chunks = 0 1","\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/indexof/index.js\n// module id = 17\n// module chunks = 0 1","\n/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar toArray = require('to-array');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:socket');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket (io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n  if (this.io.autoConnect) this.open();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function () {\n  if (this.connected) return this;\n\n  this.subEvents();\n  this.io.open(); // ensure open\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var packet = { type: parser.EVENT, data: args };\n\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress;\n\n  // event ack callback\n  if ('function' === typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  delete this.flags;\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\n      debug('sending connect packet with query %s', query);\n      this.packet({type: parser.CONNECT, query: query});\n    } else {\n      this.packet({type: parser.CONNECT});\n    }\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function (packet) {\n  if (packet.nsp !== this.nsp) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n\n    self.packet({\n      type: parser.ACK,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n  if ('function' === typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function () {\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function (compress) {\n  this.flags = this.flags || {};\n  this.flags.compress = compress;\n  return this;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/socket.io-client/lib/socket.js\n// module id = 18\n// module chunks = 0 1","\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on (obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function () {\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/socket.io-client/lib/on.js\n// module id = 19\n// module chunks = 0 1","/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/component-bind/index.js\n// module id = 20\n// module chunks = 0 1","import * as io from './../node_modules/socket.io-client';\n\ninterface IndoorLocation {\n    latitude: number;\n    longitude: number;\n    floor: number;\n    timestamp: number;\n    accuracy: number;\n}\n\ninterface UserIndoorLocation {\n    userId: string;\n    indoorLocation: IndoorLocation;\n}\n\nclass SocketIndoorLocationProvider {\n    protected connection: any;\n    protected listeners: {(err: any, p: UserIndoorLocation): void}[];\n\n    constructor(socketUrl: string, userId: string) {\n        let self = this;\n\n        self.listeners = [];\n        self.connection = io(socketUrl, {\n            autoConnect: false,\n            query: {\n                userId: userId\n            }\n        });\n\n        this.connection.on('connect', function () {\n            console.log('connection started');\n        });\n\n        this.connection.on('indoorLocationChange', function (userIndoorLocation: UserIndoorLocation) {\n            for (let callback of self.listeners) {\n                callback(null, userIndoorLocation);\n            }\n        });\n        this.connection.on('error', function (err: any) {\n            for (let callback of self.listeners) {\n                callback(err, null);\n            }\n        });\n    }\n\n    public start() {\n        console.log('start');\n        this.connection.open();\n    }\n    public stop() {\n        console.log('close');\n        this.connection.close();\n    }\n\n    public addListener(callback: {(err: any, p: UserIndoorLocation): void}) {\n        this.listeners.push(callback);\n    }\n    public removeListener(callback: {(err: any, p: UserIndoorLocation): void}) {\n        let index = this.listeners.indexOf(callback, 0);\n        if (index > -1) {\n            this.listeners.splice(index, 1);\n        }\n    }\n\n    public isStarted() {\n        return !!this.connection.id;\n    }\n\n    public supportsFloor() {\n        return true;\n    }\n\n    public getName() {\n        return 'socket';\n    }\n}\n\nexport = SocketIndoorLocationProvider;\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","\n/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar parser = require('socket.io-parser');\nvar Manager = require('./manager');\nvar debug = require('debug')('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup (uri, opts) {\n  if (typeof uri === 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] ||\n                      false === opts.multiplex || sameNamespace;\n\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.query;\n  }\n  return io.socket(parsed.path, opts);\n}\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/socket.io-client/lib/index.js\n// module id = 22\n// module chunks = 0 1","\n/**\n * Module dependencies.\n */\n\nvar parseuri = require('parseuri');\nvar debug = require('debug')('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url (uri, loc) {\n  var obj = uri;\n\n  // default to window.location\n  loc = loc || global.location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' === typeof uri) {\n    if ('/' === uri.charAt(0)) {\n      if ('/' === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n      if ('undefined' !== typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n  // define unique id\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/socket.io-client/lib/url.js\n// module id = 23\n// module chunks = 0 1","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = 24\n// module chunks = 0 1","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/debug/src/debug.js\n// module id = 25\n// module chunks = 0 1","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ms/index.js\n// module id = 26\n// module chunks = 0 1","/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof global.Blob === 'function' || toString.call(global.Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof global.File === 'function' || toString.call(global.File) === '[object FileConstructor]';\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet) {\n  var buffers = [];\n  var packetData = packet.data;\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData, buffers);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\nfunction _deconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (isBuf(data)) {\n    var placeholder = { _placeholder: true, num: buffers.length };\n    buffers.push(data);\n    return placeholder;\n  } else if (isArray(data)) {\n    var newData = new Array(data.length);\n    for (var i = 0; i < data.length; i++) {\n      newData[i] = _deconstructPacket(data[i], buffers);\n    }\n    return newData;\n  } else if (typeof data === 'object' && !(data instanceof Date)) {\n    var newData = {};\n    for (var key in data) {\n      newData[key] = _deconstructPacket(data[key], buffers);\n    }\n    return newData;\n  }\n  return data;\n}\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  packet.data = _reconstructPacket(packet.data, buffers);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\nfunction _reconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (data && data._placeholder) {\n    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n  } else if (isArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      data[i] = _reconstructPacket(data[i], buffers);\n    }\n  } else if (typeof data === 'object') {\n    for (var key in data) {\n      data[key] = _reconstructPacket(data[key], buffers);\n    }\n  }\n\n  return data;\n}\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (typeof obj === 'object' && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/socket.io-parser/binary.js\n// module id = 27\n// module chunks = 0 1","\nmodule.exports = require('./socket');\n\n/**\n * Exports parser\n *\n * @api public\n *\n */\nmodule.exports.parser = require('engine.io-parser');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/engine.io-client/lib/index.js\n// module id = 28\n// module chunks = 0 1","/**\n * Module dependencies.\n */\n\nvar transports = require('./transports/index');\nvar Emitter = require('component-emitter');\nvar debug = require('debug')('engine.io-client:socket');\nvar index = require('indexof');\nvar parser = require('engine.io-parser');\nvar parseuri = require('parseuri');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket (uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure\n    : (global.location && 'https:' === location.protocol);\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname ||\n    (global.location ? location.hostname : 'localhost');\n  this.port = opts.port || (global.location && location.port\n      ? location.port\n      : (this.secure ? 443 : 80));\n  this.query = opts.query || {};\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.transportOptions = opts.transportOptions || {};\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.prevBufferLen = 0;\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  }\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n  this.forceNode = !!opts.forceNode;\n\n  // other options for Node.js client\n  var freeGlobal = typeof global === 'object' && global;\n  if (freeGlobal.global === freeGlobal) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n\n    if (opts.localAddress) {\n      this.localAddress = opts.localAddress;\n    }\n  }\n\n  // set on handshake\n  this.id = null;\n  this.upgrades = null;\n  this.pingInterval = null;\n  this.pingTimeout = null;\n\n  // set on heartbeat\n  this.pingIntervalTimer = null;\n  this.pingTimeoutTimer = null;\n\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports/index');\nSocket.parser = require('engine.io-parser');\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // per-transport options\n  var options = this.transportOptions[name] || {};\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    query: query,\n    socket: this,\n    agent: options.agent || this.agent,\n    hostname: options.hostname || this.hostname,\n    port: options.port || this.port,\n    secure: options.secure || this.secure,\n    path: options.path || this.path,\n    forceJSONP: options.forceJSONP || this.forceJSONP,\n    jsonp: options.jsonp || this.jsonp,\n    forceBase64: options.forceBase64 || this.forceBase64,\n    enablesXDR: options.enablesXDR || this.enablesXDR,\n    timestampRequests: options.timestampRequests || this.timestampRequests,\n    timestampParam: options.timestampParam || this.timestampParam,\n    policyPort: options.policyPort || this.policyPort,\n    pfx: options.pfx || this.pfx,\n    key: options.key || this.key,\n    passphrase: options.passphrase || this.passphrase,\n    cert: options.cert || this.cert,\n    ca: options.ca || this.ca,\n    ciphers: options.ciphers || this.ciphers,\n    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\n    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\n    extraHeaders: options.extraHeaders || this.extraHeaders,\n    forceNode: options.forceNode || this.forceNode,\n    localAddress: options.localAddress || this.localAddress,\n    requestTimeout: options.requestTimeout || this.requestTimeout,\n    protocols: options.protocols || void (0)\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function () {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function (transport) {\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n  .on('drain', function () {\n    self.onDrain();\n  })\n  .on('packet', function (packet) {\n    self.onPacket(packet);\n  })\n  .on('error', function (e) {\n    self.onError(e);\n  })\n  .on('close', function () {\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, { probe: 1 });\n  var failed = false;\n  var self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen () {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' === self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport () {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  // Handle any error that happens while probing\n  function onerror (err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose () {\n    onerror('transport closed');\n  }\n\n  // When the socket is closed while we're probing\n  function onclose () {\n    onerror('socket closed');\n  }\n\n  // When the socket is upgraded while we're probing\n  function onupgrade (to) {\n    if (transport && to.name !== transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  // Remove all listeners on the transport and on self\n  function cleanup () {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' === this.readyState || 'open' === this.readyState ||\n      'closing' === this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(JSON.parse(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if ('closed' === this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' === self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || (self.pingInterval + self.pingTimeout));\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function () {\n    self.emit('ping');\n  });\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function () {\n  this.writeBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' !== this.readyState && this.transport.writable &&\n    !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write =\nSocket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' === typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing';\n\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function () {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close () {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose () {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade () {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n\n    // clean buffers after, so users can still\n    // grab the buffers on `close` event\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/engine.io-client/lib/socket.js\n// module id = 29\n// module chunks = 0 1","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/has-cors/index.js\n// module id = 30\n// module chunks = 0 1","/**\n * Module requirements.\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar Polling = require('./polling');\nvar Emitter = require('component-emitter');\nvar inherit = require('component-inherit');\nvar debug = require('debug')('engine.io-client:polling-xhr');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n/**\n * Empty function\n */\n\nfunction empty () {}\n\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction XHR (opts) {\n  Polling.call(this, opts);\n  this.requestTimeout = opts.requestTimeout;\n  this.extraHeaders = opts.extraHeaders;\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = opts.hostname !== global.location.hostname ||\n      port !== opts.port;\n    this.xs = opts.secure !== isSSL;\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling);\n\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function (opts) {\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  opts.requestTimeout = this.requestTimeout;\n\n  // other options for Node.js client\n  opts.extraHeaders = this.extraHeaders;\n\n  return new Request(opts);\n};\n\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\nXHR.prototype.doWrite = function (data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function (err) {\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nXHR.prototype.doPoll = function () {\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function (data) {\n    self.onData(data);\n  });\n  req.on('error', function (err) {\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Request (opts) {\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined !== opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n  this.requestTimeout = opts.requestTimeout;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n\n  this.create();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function () {\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n\n    if ('POST' === this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    try {\n      xhr.setRequestHeader('Accept', '*/*');\n    } catch (e) {}\n\n    // ie6 check\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    if (this.requestTimeout) {\n      xhr.timeout = this.requestTimeout;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function () {\n        self.onLoad();\n      };\n      xhr.onerror = function () {\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 2) {\n          var contentType;\n          try {\n            contentType = xhr.getResponseHeader('Content-Type');\n          } catch (e) {}\n          if (contentType === 'application/octet-stream') {\n            xhr.responseType = 'arraybuffer';\n          }\n        }\n        if (4 !== xhr.readyState) return;\n        if (200 === xhr.status || 1223 === xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function () {\n            self.onError(xhr.status);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function () {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (global.document) {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function () {\n  this.emit('success');\n  this.cleanup();\n};\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function (data) {\n  this.emit('data', data);\n  this.onSuccess();\n};\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function (err) {\n  this.emit('error', err);\n  this.cleanup(true);\n};\n\n/**\n * Cleans up house.\n *\n * @api private\n */\n\nRequest.prototype.cleanup = function (fromError) {\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\n    return;\n  }\n  // xmlhttprequest\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch (e) {}\n  }\n\n  if (global.document) {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function () {\n  var data;\n  try {\n    var contentType;\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type');\n    } catch (e) {}\n    if (contentType === 'application/octet-stream') {\n      data = this.xhr.response || this.xhr.responseText;\n    } else {\n      data = this.xhr.responseText;\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n  if (null != data) {\n    this.onData(data);\n  }\n};\n\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\nRequest.prototype.hasXDR = function () {\n  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n};\n\n/**\n * Aborts the request.\n *\n * @api public\n */\n\nRequest.prototype.abort = function () {\n  this.cleanup();\n};\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (global.document) {\n  if (global.attachEvent) {\n    global.attachEvent('onunload', unloadHandler);\n  } else if (global.addEventListener) {\n    global.addEventListener('beforeunload', unloadHandler, false);\n  }\n}\n\nfunction unloadHandler () {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/engine.io-client/lib/transports/polling-xhr.js\n// module id = 31\n// module chunks = 0 1","\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/engine.io-parser/lib/keys.js\n// module id = 32\n// module chunks = 0 1","/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/arraybuffer.slice/index.js\n// module id = 33\n// module chunks = 0 1","module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/after/index.js\n// module id = 34\n// module chunks = 0 1","/*! https://mths.be/utf8js v2.1.2 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint, strict) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tif (strict) {\n\t\t\t\tthrow Error(\n\t\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t\t' is not a scalar value'\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint, strict) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tif (!checkScalarValue(codePoint, strict)) {\n\t\t\t\tcodePoint = 0xFFFD;\n\t\t\t}\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string, opts) {\n\t\topts = opts || {};\n\t\tvar strict = false !== opts.strict;\n\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint, strict);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol(strict) {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\treturn checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString, opts) {\n\t\topts = opts || {};\n\t\tvar strict = false !== opts.strict;\n\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol(strict)) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar utf8 = {\n\t\t'version': '2.1.2',\n\t\t'encode': utf8encode,\n\t\t'decode': utf8decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn utf8;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = utf8;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tvar object = {};\n\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\tfor (var key in utf8) {\n\t\t\t\thasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.utf8 = utf8;\n\t}\n\n}(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/engine.io-parser/lib/utf8.js\n// module id = 35\n// module chunks = 0 1","module.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif(!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 36\n// module chunks = 0 1","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(){\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n  // Use a lookup table to find the index.\n  var lookup = new Uint8Array(256);\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i+1)];\n      encoded3 = lookup[base64.charCodeAt(i+2)];\n      encoded4 = lookup[base64.charCodeAt(i+3)];\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js\n// module id = 37\n// module chunks = 0 1","/**\n * Create a blob builder even when vendor prefixes exist\n */\n\nvar BlobBuilder = global.BlobBuilder\n  || global.WebKitBlobBuilder\n  || global.MSBlobBuilder\n  || global.MozBlobBuilder;\n\n/**\n * Check if Blob constructor is supported\n */\n\nvar blobSupported = (function() {\n  try {\n    var a = new Blob(['hi']);\n    return a.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if Blob constructor supports ArrayBufferViews\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\n */\n\nvar blobSupportsArrayBufferView = blobSupported && (function() {\n  try {\n    var b = new Blob([new Uint8Array([1,2])]);\n    return b.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if BlobBuilder is supported\n */\n\nvar blobBuilderSupported = BlobBuilder\n  && BlobBuilder.prototype.append\n  && BlobBuilder.prototype.getBlob;\n\n/**\n * Helper function that maps ArrayBufferViews to ArrayBuffers\n * Used by BlobBuilder constructor and old browsers that didn't\n * support it in the Blob constructor.\n */\n\nfunction mapArrayBufferViews(ary) {\n  for (var i = 0; i < ary.length; i++) {\n    var chunk = ary[i];\n    if (chunk.buffer instanceof ArrayBuffer) {\n      var buf = chunk.buffer;\n\n      // if this is a subarray, make a copy so we only\n      // include the subarray region from the underlying buffer\n      if (chunk.byteLength !== buf.byteLength) {\n        var copy = new Uint8Array(chunk.byteLength);\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n        buf = copy.buffer;\n      }\n\n      ary[i] = buf;\n    }\n  }\n}\n\nfunction BlobBuilderConstructor(ary, options) {\n  options = options || {};\n\n  var bb = new BlobBuilder();\n  mapArrayBufferViews(ary);\n\n  for (var i = 0; i < ary.length; i++) {\n    bb.append(ary[i]);\n  }\n\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\n};\n\nfunction BlobConstructor(ary, options) {\n  mapArrayBufferViews(ary);\n  return new Blob(ary, options || {});\n};\n\nmodule.exports = (function() {\n  if (blobSupported) {\n    return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\n  } else if (blobBuilderSupported) {\n    return BlobBuilderConstructor;\n  } else {\n    return undefined;\n  }\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/blob/index.js\n// module id = 38\n// module chunks = 0 1","\n/**\n * Module requirements.\n */\n\nvar Polling = require('./polling');\nvar inherit = require('component-inherit');\n\n/**\n * Module exports.\n */\n\nmodule.exports = JSONPPolling;\n\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n\n/**\n * Noop.\n */\n\nfunction empty () { }\n\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\nfunction JSONPPolling (opts) {\n  Polling.call(this, opts);\n\n  this.query = this.query || {};\n\n  // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    if (!global.___eio) global.___eio = [];\n    callbacks = global.___eio;\n  }\n\n  // callback identifier\n  this.index = callbacks.length;\n\n  // add callback to jsonp global\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  });\n\n  // append to query string\n  this.query.j = this.index;\n\n  // prevent spurious errors from being emitted when the window is unloaded\n  if (global.document && global.addEventListener) {\n    global.addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(JSONPPolling, Polling);\n\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n  script.onerror = function (e) {\n    self.onError('jsonp poll error', e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n  if (insertAt) {\n    insertAt.parentNode.insertBefore(script, insertAt);\n  } else {\n    (document.head || document.body).appendChild(script);\n  }\n  this.script = script;\n\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete () {\n    initIframe();\n    fn();\n  }\n\n  function initIframe () {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe();\n\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch (e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function () {\n      if (self.iframe.readyState === 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/engine.io-client/lib/transports/polling-jsonp.js\n// module id = 39\n// module chunks = 0 1","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parser = require('engine.io-parser');\nvar parseqs = require('parseqs');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:websocket');\nvar BrowserWebSocket = global.WebSocket || global.MozWebSocket;\nvar NodeWebSocket;\nif (typeof window === 'undefined') {\n  try {\n    NodeWebSocket = require('ws');\n  } catch (e) { }\n}\n\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\nvar WebSocket = BrowserWebSocket;\nif (!WebSocket && typeof window === 'undefined') {\n  WebSocket = NodeWebSocket;\n}\n\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  this.perMessageDeflate = opts.perMessageDeflate;\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\n  this.protocols = opts.protocols;\n  if (!this.usingBrowserWebSocket) {\n    WebSocket = NodeWebSocket;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport);\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function () {\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var uri = this.uri();\n  var protocols = this.protocols;\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate\n  };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n  if (this.localAddress) {\n    opts.localAddress = this.localAddress;\n  }\n\n  try {\n    this.ws = this.usingBrowserWebSocket ? (protocols ? new WebSocket(uri, protocols) : new WebSocket(uri)) : new WebSocket(uri, protocols, opts);\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'nodebuffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function () {\n  var self = this;\n\n  this.ws.onopen = function () {\n    self.onOpen();\n  };\n  this.ws.onclose = function () {\n    self.onClose();\n  };\n  this.ws.onmessage = function (ev) {\n    self.onData(ev.data);\n  };\n  this.ws.onerror = function (e) {\n    self.onError('websocket error', e);\n  };\n};\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n\n  // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n  var total = packets.length;\n  for (var i = 0, l = total; i < l; i++) {\n    (function (packet) {\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\n        if (!self.usingBrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' === typeof data ? global.Buffer.byteLength(data) : data.length;\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n        try {\n          if (self.usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done () {\n    self.emit('flush');\n\n    // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n    setTimeout(function () {\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function () {\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function () {\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = '';\n\n  // avoid port if default for schema\n  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||\n    ('ws' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\nWS.prototype.check = function () {\n  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/engine.io-client/lib/transports/websocket.js\n// module id = 40\n// module chunks = 0 1","module.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/to-array/index.js\n// module id = 42\n// module chunks = 0 1","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/backo2/index.js\n// module id = 43\n// module chunks = 0 1"],"sourceRoot":""}